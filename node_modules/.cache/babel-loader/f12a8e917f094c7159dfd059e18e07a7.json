{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D1\\u05D9\\u05D7\\u05D9\\\\Desktop\\\\abra\\\\src\\\\components\\\\mainPage\\\\searchBar\\\\DropDown\\\\dropDown.js\",\n    _s = $RefreshSig$();\n\nimport Classes from \"./dropDown.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDown = props => {\n  _s();\n\n  const [autoCompleteLists, setAutoCompleteLists] = useState([]);\n  const data = [{\n    LocalizedName: \"San\"\n  }, {\n    LocalizedName: \"Sa\"\n  }, {\n    LocalizedName: \"Sans\"\n  }, {\n    LocalizedName: \"Sang\"\n  }, {\n    LocalizedName: \"Sant\"\n  }];\n  useEffect(() => {\n    if (props.inputVal !== \"\") {\n      fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&q=${props.inputVal}`).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res);\n        let arr = [];\n        res.forEach(city => {\n          arr.push(city.LocalizedName);\n        });\n        setAutoCompleteLists(arr);\n        console.log(arr);\n      });\n    }\n  }, [props.inputVal]);\n\n  const autoComplete = event => {\n    props.autoComplete(event.currentTarget.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Classes.dropDown,\n    children: autoCompleteLists.map(city => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: city,\n        onClick: autoComplete,\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDown, \"IMGP7FPHxXZ05kzCCvQ3lFlrzSM=\");\n\n_c = DropDown;\nexport default DropDown;\nDropDown.defaultProps = {\n  Cities: [\"tel Aviv\", \"teheran\", \"ror\", \"hjdf\", \"dkfdj\"]\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["C:/Users/אביחי/Desktop/abra/src/components/mainPage/searchBar/DropDown/dropDown.js"],"names":["Classes","useEffect","useState","DropDown","props","autoCompleteLists","setAutoCompleteLists","data","LocalizedName","inputVal","fetch","then","res","json","console","log","arr","forEach","city","push","autoComplete","event","currentTarget","id","dropDown","map","defaultProps","Cities"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CJ,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAMK,IAAI,GAAG,CACX;AACEC,IAAAA,aAAa,EAAE;AADjB,GADW,EAIX;AACEA,IAAAA,aAAa,EAAE;AADjB,GAJW,EAOX;AACEA,IAAAA,aAAa,EAAE;AADjB,GAPW,EAUX;AACEA,IAAAA,aAAa,EAAE;AADjB,GAVW,EAaX;AACEA,IAAAA,aAAa,EAAE;AADjB,GAbW,CAAb;AAiBAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAK,CAACK,QAAN,KAAmB,EAAvB,EAA2B;AACzBC,MAAAA,KAAK,CACF,iHAAgHN,KAAK,CAACK,QAAS,EAD7H,CAAL,CAGGE,IAHH,CAGSC,GAAD,IAAS;AACb,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OALH,EAMGF,IANH,CAMSC,GAAD,IAAS;AACbE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,YAAII,GAAG,GAAG,EAAV;AACAJ,QAAAA,GAAG,CAACK,OAAJ,CAAaC,IAAD,IAAU;AACpBF,UAAAA,GAAG,CAACG,IAAJ,CAASD,IAAI,CAACV,aAAd;AACD,SAFD;AAGAF,QAAAA,oBAAoB,CAACU,GAAD,CAApB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,OAdH;AAeD;AACF,GAlBQ,EAkBN,CAACZ,KAAK,CAACK,QAAP,CAlBM,CAAT;;AAoBA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC9BjB,IAAAA,KAAK,CAACgB,YAAN,CAAmBC,KAAK,CAACC,aAAN,CAAoBC,EAAvC;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACwB,QAAxB;AAAA,cACGnB,iBAAiB,CAACoB,GAAlB,CAAuBP,IAAD,IAAU;AAC/B,0BACE;AAAK,QAAA,EAAE,EAAEA,IAAT;AAAe,QAAA,OAAO,EAAEE,YAAxB;AAAA,kBACGF;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArDD;;GAAMf,Q;;KAAAA,Q;AAuDN,eAAeA,QAAf;AAEAA,QAAQ,CAACuB,YAAT,GAAwB;AACtBC,EAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,SAAb,EAAwB,KAAxB,EAA+B,MAA/B,EAAuC,OAAvC;AADc,CAAxB","sourcesContent":["import Classes from \"./dropDown.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nconst DropDown = (props) => {\r\n  const [autoCompleteLists, setAutoCompleteLists] = useState([]);\r\n  const data = [\r\n    {\r\n      LocalizedName: \"San\",\r\n    },\r\n    {\r\n      LocalizedName: \"Sa\",\r\n    },\r\n    {\r\n      LocalizedName: \"Sans\",\r\n    },\r\n    {\r\n      LocalizedName: \"Sang\",\r\n    },\r\n    {\r\n      LocalizedName: \"Sant\",\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    if (props.inputVal !== \"\") {\r\n      fetch(\r\n        `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&q=${props.inputVal}`\r\n      )\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          let arr = [];\r\n          res.forEach((city) => {\r\n            arr.push(city.LocalizedName);\r\n          });\r\n          setAutoCompleteLists(arr);\r\n          console.log(arr);\r\n        });\r\n    }\r\n  }, [props.inputVal]);\r\n\r\n  const autoComplete = (event) => {\r\n    props.autoComplete(event.currentTarget.id);\r\n  };\r\n  return (\r\n    <div className={Classes.dropDown}>\r\n      {autoCompleteLists.map((city) => {\r\n        return (\r\n          <div id={city} onClick={autoComplete}>\r\n            {city}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n\r\nDropDown.defaultProps = {\r\n  Cities: [\"tel Aviv\", \"teheran\", \"ror\", \"hjdf\", \"dkfdj\"],\r\n};\r\n"]},"metadata":{},"sourceType":"module"}