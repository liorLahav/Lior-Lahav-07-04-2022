{"ast":null,"code":"const initailState = {\n  favorites: {},\n  location: {\n    city: \"Tel aviv\",\n    key: 215854\n  },\n  currentWheather: {},\n  futureWheather: {}\n};\nconsole.log(initailState);\n\nconst Reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initailState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state, action);\n  let temp;\n\n  switch (action.type) {\n    case \"addFavorite\":\n      temp = state.favorites;\n      temp[action.payload.id] = action.payload.city;\n      console.log(temp);\n      return {\n        favorites: temp,\n        location: state.location\n      };\n\n    case \"removeFavorite\":\n      temp = state.favorites;\n      delete temp[action.payload.id];\n      console.log(temp);\n      return {\n        favorites: temp,\n        location: state.location\n      };\n\n    case \"changeLocation\":\n      return {\n        favorites: state.favorites,\n        location: {\n          city: action.payload.location,\n          key: action.payload.key\n        }\n      };\n\n    case \"AddCurrentWheather\":\n      temp = state.currentWheather;\n      temp[action.payload.key].current = action.payload.current;\n      return {\n        favorites: state.favorites,\n        location: state.location,\n        currentWheather: temp,\n        futureWheather: state.futureWheather\n      };\n\n    case \"AddFutureWheather\":\n      temp = state.searchedLocations;\n      temp[action.payload.key].current = action.payload.current;\n      return {\n        favorites: state.favorites,\n        location: state.location,\n        searchedLocations: temp\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["C:/Users/אביחי/Desktop/abra/src/store/reducer.js"],"names":["initailState","favorites","location","city","key","currentWheather","futureWheather","console","log","Reducer","state","action","temp","type","payload","id","current","searchedLocations"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,GAAG,EAAE;AAAzB,GAFS;AAGnBC,EAAAA,eAAe,EAAE,EAHE;AAInBC,EAAAA,cAAc,EAAE;AAJG,CAArB;AAMAC,OAAO,CAACC,GAAR,CAAYR,YAAZ;;AACA,MAAMS,OAAO,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;AAChDJ,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EAAmBC,MAAnB;AACA,MAAIC,IAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAK,aAAL;AACED,MAAAA,IAAI,GAAGF,KAAK,CAACT,SAAb;AACAW,MAAAA,IAAI,CAACD,MAAM,CAACG,OAAP,CAAeC,EAAhB,CAAJ,GAA0BJ,MAAM,CAACG,OAAP,CAAeX,IAAzC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,aAAO;AAAEX,QAAAA,SAAS,EAAEW,IAAb;AAAmBV,QAAAA,QAAQ,EAAEQ,KAAK,CAACR;AAAnC,OAAP;;AACF,SAAK,gBAAL;AACEU,MAAAA,IAAI,GAAGF,KAAK,CAACT,SAAb;AACA,aAAOW,IAAI,CAACD,MAAM,CAACG,OAAP,CAAeC,EAAhB,CAAX;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,aAAO;AAAEX,QAAAA,SAAS,EAAEW,IAAb;AAAmBV,QAAAA,QAAQ,EAAEQ,KAAK,CAACR;AAAnC,OAAP;;AACF,SAAK,gBAAL;AACE,aAAO;AACLD,QAAAA,SAAS,EAAES,KAAK,CAACT,SADZ;AAELC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAEQ,MAAM,CAACG,OAAP,CAAeZ,QADb;AAERE,UAAAA,GAAG,EAAEO,MAAM,CAACG,OAAP,CAAeV;AAFZ;AAFL,OAAP;;AAOF,SAAK,oBAAL;AACEQ,MAAAA,IAAI,GAAGF,KAAK,CAACL,eAAb;AACAO,MAAAA,IAAI,CAACD,MAAM,CAACG,OAAP,CAAeV,GAAhB,CAAJ,CAAyBY,OAAzB,GAAmCL,MAAM,CAACG,OAAP,CAAeE,OAAlD;AACA,aAAO;AACLf,QAAAA,SAAS,EAAES,KAAK,CAACT,SADZ;AAELC,QAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAFX;AAGLG,QAAAA,eAAe,EAAEO,IAHZ;AAILN,QAAAA,cAAc,EAAEI,KAAK,CAACJ;AAJjB,OAAP;;AAMF,SAAK,mBAAL;AACEM,MAAAA,IAAI,GAAGF,KAAK,CAACO,iBAAb;AACAL,MAAAA,IAAI,CAACD,MAAM,CAACG,OAAP,CAAeV,GAAhB,CAAJ,CAAyBY,OAAzB,GAAmCL,MAAM,CAACG,OAAP,CAAeE,OAAlD;AACA,aAAO;AACLf,QAAAA,SAAS,EAAES,KAAK,CAACT,SADZ;AAELC,QAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAFX;AAGLe,QAAAA,iBAAiB,EAAEL;AAHd,OAAP;;AAKF;AACE,aAAOF,KAAP;AArCJ;AAuCD,CA1CD;;KAAMD,O;AA2CN,eAAeA,OAAf","sourcesContent":["const initailState = {\r\n  favorites: {},\r\n  location: { city: \"Tel aviv\", key: 215854 },\r\n  currentWheather: {},\r\n  futureWheather: {},\r\n};\r\nconsole.log(initailState);\r\nconst Reducer = (state = initailState, action) => {\r\n  console.log(state, action);\r\n  let temp;\r\n  switch (action.type) {\r\n    case \"addFavorite\":\r\n      temp = state.favorites;\r\n      temp[action.payload.id] = action.payload.city;\r\n      console.log(temp);\r\n      return { favorites: temp, location: state.location };\r\n    case \"removeFavorite\":\r\n      temp = state.favorites;\r\n      delete temp[action.payload.id];\r\n      console.log(temp);\r\n      return { favorites: temp, location: state.location };\r\n    case \"changeLocation\":\r\n      return {\r\n        favorites: state.favorites,\r\n        location: {\r\n          city: action.payload.location,\r\n          key: action.payload.key,\r\n        },\r\n      };\r\n    case \"AddCurrentWheather\":\r\n      temp = state.currentWheather;\r\n      temp[action.payload.key].current = action.payload.current;\r\n      return {\r\n        favorites: state.favorites,\r\n        location: state.location,\r\n        currentWheather: temp,\r\n        futureWheather: state.futureWheather,\r\n      };\r\n    case \"AddFutureWheather\":\r\n      temp = state.searchedLocations;\r\n      temp[action.payload.key].current = action.payload.current;\r\n      return {\r\n        favorites: state.favorites,\r\n        location: state.location,\r\n        searchedLocations: temp,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Reducer;\r\n"]},"metadata":{},"sourceType":"module"}