{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D1\\u05D9\\u05D7\\u05D9\\\\Desktop\\\\abra\\\\src\\\\components\\\\mainPage\\\\searchBar\\\\DropDown\\\\dropDown.js\",\n    _s = $RefreshSig$();\n\nimport Classes from \"./dropDown.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDown = props => {\n  _s();\n\n  const [autoCompleteLists, setAutoCompleteLists] = useState([]);\n  const data = [{\n    LocalizedName: \"San\",\n    key: 1\n  }, {\n    LocalizedName: \"Sa\",\n    key: 3\n  }, {\n    LocalizedName: \"Sans\",\n    key: 4\n  }, {\n    LocalizedName: \"Sang\",\n    key: 8\n  }, {\n    LocalizedName: \"Sant\",\n    key: 7\n  }];\n  useEffect(() => {\n    if (props.inputVal !== \"\") {\n      // fetch(\n      //   `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&q=${props.inputVal}`\n      // )\n      //   .then((res) => {\n      //     return res.json();\n      //   })\n      //   .then((res) => {\n      //     console.log(res);\n      //   });\n      let arr = [];\n      data.forEach(city => {\n        arr.push({\n          name: city.LocalizedName,\n          key: city.key\n        });\n      });\n      setAutoCompleteLists(arr);\n      console.log(arr);\n    }\n  }, [props.inputVal]);\n\n  const autoComplete = event => {\n    console.log(event.currentTarget.value);\n    props.autoComplete({\n      key: event.currentTarget.id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Classes.dropDown,\n    children: autoCompleteLists.map(city => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: city.key,\n        onClick: autoComplete,\n        children: city.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDown, \"IMGP7FPHxXZ05kzCCvQ3lFlrzSM=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["C:/Users/אביחי/Desktop/abra/src/components/mainPage/searchBar/DropDown/dropDown.js"],"names":["Classes","useEffect","useState","DropDown","props","autoCompleteLists","setAutoCompleteLists","data","LocalizedName","key","inputVal","arr","forEach","city","push","name","console","log","autoComplete","event","currentTarget","value","id","dropDown","map"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CJ,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAMK,IAAI,GAAG,CACX;AACEC,IAAAA,aAAa,EAAE,KADjB;AAEEC,IAAAA,GAAG,EAAE;AAFP,GADW,EAKX;AACED,IAAAA,aAAa,EAAE,IADjB;AAEEC,IAAAA,GAAG,EAAE;AAFP,GALW,EASX;AACED,IAAAA,aAAa,EAAE,MADjB;AAEEC,IAAAA,GAAG,EAAE;AAFP,GATW,EAaX;AACED,IAAAA,aAAa,EAAE,MADjB;AAEEC,IAAAA,GAAG,EAAE;AAFP,GAbW,EAiBX;AACED,IAAAA,aAAa,EAAE,MADjB;AAEEC,IAAAA,GAAG,EAAE;AAFP,GAjBW,CAAb;AAsBAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAK,CAACM,QAAN,KAAmB,EAAvB,EAA2B;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIC,GAAG,GAAG,EAAV;AACAJ,MAAAA,IAAI,CAACK,OAAL,CAAcC,IAAD,IAAU;AACrBF,QAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEC,UAAAA,IAAI,EAAEF,IAAI,CAACL,aAAb;AAA4BC,UAAAA,GAAG,EAAEI,IAAI,CAACJ;AAAtC,SAAT;AACD,OAFD;AAGAH,MAAAA,oBAAoB,CAACK,GAAD,CAApB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACD;AACF,GAlBQ,EAkBN,CAACP,KAAK,CAACM,QAAP,CAlBM,CAAT;;AAoBA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,aAAN,CAAoBC,KAAhC;AACAjB,IAAAA,KAAK,CAACc,YAAN,CAAmB;AAAET,MAAAA,GAAG,EAAEU,KAAK,CAACC,aAAN,CAAoBE;AAA3B,KAAnB;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEtB,OAAO,CAACuB,QAAxB;AAAA,cACGlB,iBAAiB,CAACmB,GAAlB,CAAuBX,IAAD,IAAU;AAC/B,0BACE;AAAK,QAAA,EAAE,EAAEA,IAAI,CAACJ,GAAd;AAAmB,QAAA,OAAO,EAAES,YAA5B;AAAA,kBACGL,IAAI,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3DD;;GAAMZ,Q;;KAAAA,Q;AA6DN,eAAeA,QAAf","sourcesContent":["import Classes from \"./dropDown.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nconst DropDown = (props) => {\r\n  const [autoCompleteLists, setAutoCompleteLists] = useState([]);\r\n  const data = [\r\n    {\r\n      LocalizedName: \"San\",\r\n      key: 1,\r\n    },\r\n    {\r\n      LocalizedName: \"Sa\",\r\n      key: 3,\r\n    },\r\n    {\r\n      LocalizedName: \"Sans\",\r\n      key: 4,\r\n    },\r\n    {\r\n      LocalizedName: \"Sang\",\r\n      key: 8,\r\n    },\r\n    {\r\n      LocalizedName: \"Sant\",\r\n      key: 7,\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    if (props.inputVal !== \"\") {\r\n      // fetch(\r\n      //   `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&q=${props.inputVal}`\r\n      // )\r\n      //   .then((res) => {\r\n      //     return res.json();\r\n      //   })\r\n      //   .then((res) => {\r\n      //     console.log(res);\r\n      //   });\r\n      let arr = [];\r\n      data.forEach((city) => {\r\n        arr.push({ name: city.LocalizedName, key: city.key });\r\n      });\r\n      setAutoCompleteLists(arr);\r\n      console.log(arr);\r\n    }\r\n  }, [props.inputVal]);\r\n\r\n  const autoComplete = (event) => {\r\n    console.log(event.currentTarget.value);\r\n    props.autoComplete({ key: event.currentTarget.id });\r\n  };\r\n  return (\r\n    <div className={Classes.dropDown}>\r\n      {autoCompleteLists.map((city) => {\r\n        return (\r\n          <div id={city.key} onClick={autoComplete}>\r\n            {city.name}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n"]},"metadata":{},"sourceType":"module"}