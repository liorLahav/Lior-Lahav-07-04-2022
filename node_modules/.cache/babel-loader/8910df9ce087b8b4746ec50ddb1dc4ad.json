{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D1\\u05D9\\u05D7\\u05D9\\\\Desktop\\\\abra\\\\src\\\\components\\\\mainPage\\\\nextWeekWeather\\\\nextWeekWeather.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../../UI/Card/card\";\nimport TempDisplay from \"./tempDisplay/tempDispaly\";\nimport Classes from \"./nextWeekWeather.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NextWeekWeather = props => {\n  _s();\n\n  const dispach = useDispatch();\n  const [data, setData] = useState([]);\n  const location = useSelector(state => {\n    return state.location;\n  });\n  const storedData = useSelector(state => {\n    return state.futureWheather[location.key];\n  });\n  console.log(location);\n  useEffect(() => {\n    if (storedData !== undefined) {\n      setData(storedData);\n    } else {\n      fetch(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.key}?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&metric=true`).then(res => {\n        return res.json();\n      }).then(res => {\n        let future = [];\n        let options = {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\"\n        };\n        res.DailyForecasts.forEach(day => {\n          let icon = day.Day.Icon;\n\n          if (icon < 10) {\n            icon = \"0\" + icon;\n          }\n\n          future.push({\n            day: new Date(day.Date).toLocaleDateString(\"en-US\", options),\n            min: day.Temperature.Minimum.Value,\n            max: day.Temperature.Maximum.Value,\n            src: icon\n          });\n        });\n        setData(future);\n        dispach({\n          type: \"AddFutureWheather\",\n          payload: {\n            key: location.key,\n            data: future\n          }\n        });\n      }).catch(err => {\n        dispach({\n          type: \"alert\"\n        });\n        console.log(err);\n      });\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Classes.nextWeekWeather,\n    children: data.map((forcast, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        class: Classes.nextWeekCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: forcast.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"temperature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Classes.tempContainer,\n          children: [/*#__PURE__*/_jsxDEV(TempDisplay, {\n            headline: \"minimum\",\n            temperature: forcast.min\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://developer.accuweather.com/sites/default/files/${forcast.src}-s.png`,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TempDisplay, {\n            headline: \"maximum\",\n            temperature: forcast.max\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NextWeekWeather, \"SP+0jvCeYUXzc7583Wi3b829bfw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = NextWeekWeather;\nexport default NextWeekWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"NextWeekWeather\");","map":{"version":3,"sources":["C:/Users/אביחי/Desktop/abra/src/components/mainPage/nextWeekWeather/nextWeekWeather.js"],"names":["Card","TempDisplay","Classes","useDispatch","useSelector","useEffect","useState","NextWeekWeather","props","dispach","data","setData","location","state","storedData","futureWheather","key","console","log","undefined","fetch","then","res","json","future","options","weekday","year","month","day","DailyForecasts","forEach","icon","Day","Icon","push","Date","toLocaleDateString","min","Temperature","Minimum","Value","max","Maximum","src","type","payload","catch","err","nextWeekWeather","map","forcast","index","nextWeekCard","tempContainer"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAMC,OAAO,GAAGN,WAAW,EAA3B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMM,QAAQ,GAAGR,WAAW,CAAES,KAAD,IAAW;AACtC,WAAOA,KAAK,CAACD,QAAb;AACD,GAF2B,CAA5B;AAGA,QAAME,UAAU,GAAGV,WAAW,CAAES,KAAD,IAAW;AACxC,WAAOA,KAAK,CAACE,cAAN,CAAqBH,QAAQ,CAACI,GAA9B,CAAP;AACD,GAF6B,CAA9B;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,UAAU,KAAKK,SAAnB,EAA8B;AAC5BR,MAAAA,OAAO,CAACG,UAAD,CAAP;AACD,KAFD,MAEO;AACLM,MAAAA,KAAK,CACF,8DAA6DR,QAAQ,CAACI,GAAI,sDADxE,CAAL,CAGGK,IAHH,CAGSC,GAAD,IAAS;AACb,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OALH,EAMGF,IANH,CAMSC,GAAD,IAAS;AACb,YAAIE,MAAM,GAAG,EAAb;AACA,YAAIC,OAAO,GAAG;AACZC,UAAAA,OAAO,EAAE,MADG;AAEZC,UAAAA,IAAI,EAAE,SAFM;AAGZC,UAAAA,KAAK,EAAE,MAHK;AAIZC,UAAAA,GAAG,EAAE;AAJO,SAAd;AAMAP,QAAAA,GAAG,CAACQ,cAAJ,CAAmBC,OAAnB,CAA4BF,GAAD,IAAS;AAClC,cAAIG,IAAI,GAAGH,GAAG,CAACI,GAAJ,CAAQC,IAAnB;;AACA,cAAIF,IAAI,GAAG,EAAX,EAAe;AACbA,YAAAA,IAAI,GAAG,MAAMA,IAAb;AACD;;AACDR,UAAAA,MAAM,CAACW,IAAP,CAAY;AACVN,YAAAA,GAAG,EAAE,IAAIO,IAAJ,CAASP,GAAG,CAACO,IAAb,EAAmBC,kBAAnB,CAAsC,OAAtC,EAA+CZ,OAA/C,CADK;AAEVa,YAAAA,GAAG,EAAET,GAAG,CAACU,WAAJ,CAAgBC,OAAhB,CAAwBC,KAFnB;AAGVC,YAAAA,GAAG,EAAEb,GAAG,CAACU,WAAJ,CAAgBI,OAAhB,CAAwBF,KAHnB;AAIVG,YAAAA,GAAG,EAAEZ;AAJK,WAAZ;AAMD,SAXD;AAYArB,QAAAA,OAAO,CAACa,MAAD,CAAP;AACAf,QAAAA,OAAO,CAAC;AACNoC,UAAAA,IAAI,EAAE,mBADA;AAENC,UAAAA,OAAO,EAAE;AAAE9B,YAAAA,GAAG,EAAEJ,QAAQ,CAACI,GAAhB;AAAqBN,YAAAA,IAAI,EAAEc;AAA3B;AAFH,SAAD,CAAP;AAID,OA/BH,EAgCGuB,KAhCH,CAgCUC,GAAD,IAAS;AACdvC,QAAAA,OAAO,CAAC;AAAEoC,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAP;AACA5B,QAAAA,OAAO,CAACC,GAAR,CAAY8B,GAAZ;AACD,OAnCH;AAoCD;AACF,GAzCQ,EAyCN,CAACpC,QAAD,CAzCM,CAAT;AA0CA,sBACE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC+C,eAAxB;AAAA,cACGvC,IAAI,CAACwC,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC5B,0BACE,QAAC,IAAD;AAAkB,QAAA,KAAK,EAAElD,OAAO,CAACmD,YAAjC;AAAA,gCACE;AAAA,oBAAKF,OAAO,CAACtB;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAE3B,OAAO,CAACoD,aAAxB;AAAA,kCACE,QAAC,WAAD;AAAa,YAAA,QAAQ,EAAC,SAAtB;AAAgC,YAAA,WAAW,EAAEH,OAAO,CAACb;AAArD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,GAAG,EAAG,yDAAwDa,OAAO,CAACP,GAAI,QAD5E;AAEE,YAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME,QAAC,WAAD;AAAa,YAAA,QAAQ,EAAC,SAAtB;AAAgC,YAAA,WAAW,EAAEO,OAAO,CAACT;AAArD;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAWU,KAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAfA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAxED;;GAAM7C,e;UACYJ,W,EAECC,W,EAGEA,W;;;KANfG,e;AA0EN,eAAeA,eAAf","sourcesContent":["import Card from \"../../UI/Card/card\";\r\nimport TempDisplay from \"./tempDisplay/tempDispaly\";\r\nimport Classes from \"./nextWeekWeather.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst NextWeekWeather = (props) => {\r\n  const dispach = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const location = useSelector((state) => {\r\n    return state.location;\r\n  });\r\n  const storedData = useSelector((state) => {\r\n    return state.futureWheather[location.key];\r\n  });\r\n  console.log(location);\r\n  useEffect(() => {\r\n    if (storedData !== undefined) {\r\n      setData(storedData);\r\n    } else {\r\n      fetch(\r\n        `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.key}?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&metric=true`\r\n      )\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          let future = [];\r\n          let options = {\r\n            weekday: \"long\",\r\n            year: \"numeric\",\r\n            month: \"long\",\r\n            day: \"numeric\",\r\n          };\r\n          res.DailyForecasts.forEach((day) => {\r\n            let icon = day.Day.Icon;\r\n            if (icon < 10) {\r\n              icon = \"0\" + icon;\r\n            }\r\n            future.push({\r\n              day: new Date(day.Date).toLocaleDateString(\"en-US\", options),\r\n              min: day.Temperature.Minimum.Value,\r\n              max: day.Temperature.Maximum.Value,\r\n              src: icon,\r\n            });\r\n          });\r\n          setData(future);\r\n          dispach({\r\n            type: \"AddFutureWheather\",\r\n            payload: { key: location.key, data: future },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          dispach({ type: \"alert\" });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [location]);\r\n  return (\r\n    <div className={Classes.nextWeekWeather}>\r\n      {data.map((forcast, index) => {\r\n        return (\r\n          <Card key={index} class={Classes.nextWeekCard}>\r\n            <h2>{forcast.day}</h2>\r\n            <h3>temperature:</h3>\r\n            <div className={Classes.tempContainer}>\r\n              <TempDisplay headline=\"minimum\" temperature={forcast.min} />\r\n              <img\r\n                src={`https://developer.accuweather.com/sites/default/files/${forcast.src}-s.png`}\r\n                loading=\"lazy\"\r\n              ></img>\r\n              <TempDisplay headline=\"maximum\" temperature={forcast.max} />\r\n            </div>\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NextWeekWeather;\r\n"]},"metadata":{},"sourceType":"module"}