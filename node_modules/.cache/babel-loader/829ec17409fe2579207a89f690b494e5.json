{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D1\\u05D9\\u05D7\\u05D9\\\\Desktop\\\\abra\\\\src\\\\components\\\\mainPage\\\\searchBar\\\\DropDown\\\\dropDown.js\",\n    _s = $RefreshSig$();\n\nimport Classes from \"./dropDown.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDown = props => {\n  _s();\n\n  const [autoCompleteLists, setAutoCompleteLists] = useState([]);\n  useEffect(() => {\n    if (props.inputVal !== \"\") {\n      fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&q=${props.inputVal}`).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res);\n        let arr = [];\n        res.forEach(city => {\n          arr.push({\n            location: city.LocalizedName,\n            key: city.Key\n          });\n        });\n        console.log(arr);\n        setAutoCompleteLists(arr);\n      }); // let arr = [];\n      // data.forEach((city) => {\n      //   arr.push({ location: city.LocalizedName, key: city.key });\n      // });\n      // setAutoCompleteLists(arr);\n      // console.log(arr);\n    }\n  }, [props.inputVal]);\n\n  const autoComplete = event => {\n    setAutoCompleteLists([]);\n    props.autoComplete(autoCompleteLists[event.currentTarget.id]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: autoCompleteLists != [] ? \"inline-block\" : \"none\"\n    },\n    className: Classes.dropDown,\n    children: autoCompleteLists.map((city, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: index,\n        onClick: autoComplete,\n        children: city.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDown, \"IMGP7FPHxXZ05kzCCvQ3lFlrzSM=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["C:/Users/אביחי/Desktop/abra/src/components/mainPage/searchBar/DropDown/dropDown.js"],"names":["Classes","useEffect","useState","DropDown","props","autoCompleteLists","setAutoCompleteLists","inputVal","fetch","then","res","json","console","log","arr","forEach","city","push","location","LocalizedName","key","Key","autoComplete","event","currentTarget","id","display","dropDown","map","index"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CJ,QAAQ,CAAC,EAAD,CAA1D;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAK,CAACG,QAAN,KAAmB,EAAvB,EAA2B;AACzBC,MAAAA,KAAK,CACF,iHAAgHJ,KAAK,CAACG,QAAS,EAD7H,CAAL,CAGGE,IAHH,CAGSC,GAAD,IAAS;AACb,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OALH,EAMGF,IANH,CAMSC,GAAD,IAAS;AACbE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,YAAII,GAAG,GAAG,EAAV;AACAJ,QAAAA,GAAG,CAACK,OAAJ,CAAaC,IAAD,IAAU;AACpBF,UAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEC,YAAAA,QAAQ,EAAEF,IAAI,CAACG,aAAjB;AAAgCC,YAAAA,GAAG,EAAEJ,IAAI,CAACK;AAA1C,WAAT;AACD,SAFD;AAGAT,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAR,QAAAA,oBAAoB,CAACQ,GAAD,CAApB;AACD,OAdH,EADyB,CAgBzB;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GAxBQ,EAwBN,CAACV,KAAK,CAACG,QAAP,CAxBM,CAAT;;AA0BA,QAAMe,YAAY,GAAIC,KAAD,IAAW;AAC9BjB,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAF,IAAAA,KAAK,CAACkB,YAAN,CAAmBjB,iBAAiB,CAACkB,KAAK,CAACC,aAAN,CAAoBC,EAArB,CAApC;AACD,GAHD;;AAIA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAErB,iBAAiB,IAAI,EAArB,GAA0B,cAA1B,GAA2C;AAAtD,KADT;AAEE,IAAA,SAAS,EAAEL,OAAO,CAAC2B,QAFrB;AAAA,cAIGtB,iBAAiB,CAACuB,GAAlB,CAAsB,CAACZ,IAAD,EAAOa,KAAP,KAAiB;AACtC,0BACE;AAAK,QAAA,EAAE,EAAEA,KAAT;AAAgB,QAAA,OAAO,EAAEP,YAAzB;AAAA,kBACGN,IAAI,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANA;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA9CD;;GAAMf,Q;;KAAAA,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import Classes from \"./dropDown.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nconst DropDown = (props) => {\r\n  const [autoCompleteLists, setAutoCompleteLists] = useState([]);\r\n  useEffect(() => {\r\n    if (props.inputVal !== \"\") {\r\n      fetch(\r\n        `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&q=${props.inputVal}`\r\n      )\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          let arr = [];\r\n          res.forEach((city) => {\r\n            arr.push({ location: city.LocalizedName, key: city.Key });\r\n          });\r\n          console.log(arr);\r\n          setAutoCompleteLists(arr);\r\n        });\r\n      // let arr = [];\r\n      // data.forEach((city) => {\r\n      //   arr.push({ location: city.LocalizedName, key: city.key });\r\n      // });\r\n      // setAutoCompleteLists(arr);\r\n      // console.log(arr);\r\n    }\r\n  }, [props.inputVal]);\r\n\r\n  const autoComplete = (event) => {\r\n    setAutoCompleteLists([]);\r\n    props.autoComplete(autoCompleteLists[event.currentTarget.id]);\r\n  };\r\n  return (\r\n    <div\r\n      style={{ display: autoCompleteLists != [] ? \"inline-block\" : \"none\" }}\r\n      className={Classes.dropDown}\r\n    >\r\n      {autoCompleteLists.map((city, index) => {\r\n        return (\r\n          <div id={index} onClick={autoComplete}>\r\n            {city.location}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n"]},"metadata":{},"sourceType":"module"}