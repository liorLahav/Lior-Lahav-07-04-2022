{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D1\\u05D9\\u05D7\\u05D9\\\\Desktop\\\\abra\\\\src\\\\components\\\\mainPage\\\\searchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport DropDown from \"./DropDown/dropDown\";\nimport Classes from \"./SerchBar.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  const dispach = useDispatch();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [searchHaveError, setsearchHaveError] = useState(null);\n  let autoCompleteData;\n\n  const inputHandler = event => {\n    let value = event.target.value;\n\n    if (value.length === 0) {\n      setsearchHaveError(null);\n    } else {\n      for (let i = 0; i < value.length; i++) {\n        let temp = value.charCodeAt(i);\n\n        if (96 < temp && temp < 122 || 65 < temp && temp < 90) {\n          if (i === value.length - 1) {\n            setsearchHaveError(false);\n          }\n        } else {\n          setsearchHaveError(true);\n          break;\n        }\n      }\n    }\n\n    event.target.value.slice();\n    setInputValue(event.target.value);\n  };\n\n  const submitHandler = (event, value) => {\n    event.preventDefault();\n    console.log(autoCompleteData);\n\n    if (autoCompleteData !== undefined) {\n      setInputValue(\"\");\n      console.log(autoCompleteData);\n      dispach({\n        type: \"changeLocation\",\n        payload: autoCompleteData\n      });\n    }\n  };\n\n  const autoCompleteHandler = value => {\n    setInputValue(value.location);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Classes.searchContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: Classes.Search,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: searchHaveError ? Classes.searchError : null,\n        onChange: inputHandler,\n        placeholder: \"Search here\",\n        value: inputValue,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), searchHaveError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"invalid input only english letter are allowed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      inputVal: inputValue,\n      autoComplete: autoCompleteHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"4YKDWBAvxh9K8QtBrufYCc5Py7A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/אביחי/Desktop/abra/src/components/mainPage/searchBar/SearchBar.js"],"names":["useState","useDispatch","DropDown","Classes","Search","props","dispach","inputValue","setInputValue","searchHaveError","setsearchHaveError","autoCompleteData","inputHandler","event","value","target","length","i","temp","charCodeAt","slice","submitHandler","preventDefault","console","log","undefined","type","payload","autoCompleteHandler","location","searchContainer","searchError"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DropDown from \"./DropDown/dropDown\";\r\nimport Classes from \"./SerchBar.module.css\";\r\n\r\nconst Search = (props) => {\r\n  const dispach = useDispatch();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [searchHaveError, setsearchHaveError] = useState(null);\r\n  let autoCompleteData;\r\n  const inputHandler = (event) => {\r\n    let value = event.target.value;\r\n    if (value.length === 0) {\r\n      setsearchHaveError(null);\r\n    } else {\r\n      for (let i = 0; i < value.length; i++) {\r\n        let temp = value.charCodeAt(i);\r\n\r\n        if ((96 < temp && temp < 122) || (65 < temp && temp < 90)) {\r\n          if (i === value.length - 1) {\r\n            setsearchHaveError(false);\r\n          }\r\n        } else {\r\n          setsearchHaveError(true);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    event.target.value.slice();\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event, value) => {\r\n    event.preventDefault();\r\n    console.log(autoCompleteData);\r\n    if (autoCompleteData !== undefined) {\r\n      setInputValue(\"\");\r\n      console.log(autoCompleteData);\r\n      dispach({ type: \"changeLocation\", payload: autoCompleteData });\r\n    }\r\n  };\r\n  const autoCompleteHandler = (value) => {\r\n    setInputValue(value.location);\r\n  };\r\n  return (\r\n    <div className={Classes.searchContainer}>\r\n      <form onSubmit={submitHandler} className={Classes.Search}>\r\n        <button type=\"submit\"></button>\r\n        <input\r\n          className={searchHaveError ? Classes.searchError : null}\r\n          onChange={inputHandler}\r\n          placeholder=\"Search here\"\r\n          value={inputValue}\r\n          type=\"text\"\r\n        ></input>\r\n      </form>\r\n      {searchHaveError && <p>invalid input only english letter are allowed</p>}\r\n      <DropDown inputVal={inputValue} autoComplete={autoCompleteHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}