{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D1\\u05D9\\u05D7\\u05D9\\\\Desktop\\\\abra\\\\src\\\\components\\\\mainPage\\\\nextWeekWeather\\\\nextWeekWeather.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../../UI/Card/card\";\nimport TempDisplay from \"./tempDisplay/tempDispaly\";\nimport Classes from \"./nextWeekWeather.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NextWeekWeather = props => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const location = useSelector(state => {\n    return state.location;\n  });\n  console.log(location);\n  useEffect(() => {\n    fetch(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.key}?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&metric=true`).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n      let future = [];\n      let options = {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      res.DailyForecasts.forEach(day => {\n        let icon = day.Day.Icon;\n\n        if (icon < 10) {\n          icon = \"0\" + icon;\n        }\n\n        future.push({\n          day: new Date(day.Date).toLocaleDateString(\"en-US\", options),\n          min: day.Temperature.Minimum.Value,\n          max: day.Temperature.Maximum.Value,\n          src: icon\n        });\n      });\n      setData(future);\n    });\n  }, [location]);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Classes.nextWeekWeather,\n    children: data.map((forcast, index) => {\n      console.log(data);\n      console.log(index);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: Classes.nextWeekCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: forcast.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"temperature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Classes.tempContainer,\n          children: [/*#__PURE__*/_jsxDEV(TempDisplay, {\n            headline: \"minimum\",\n            temperature: forcast.min\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://developer.accuweather.com/sites/default/files/${forcast.src}-s.png`,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TempDisplay, {\n            headline: \"maximum\",\n            temperature: forcast.max\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NextWeekWeather, \"TSbIJKs8DejlJ+6tF7q6IfNHieE=\", false, function () {\n  return [useSelector];\n});\n\n_c = NextWeekWeather;\nexport default NextWeekWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"NextWeekWeather\");","map":{"version":3,"sources":["C:/Users/אביחי/Desktop/abra/src/components/mainPage/nextWeekWeather/nextWeekWeather.js"],"names":["Card","TempDisplay","Classes","useSelector","useEffect","useState","NextWeekWeather","props","data","setData","location","state","console","log","fetch","key","then","res","json","future","options","weekday","year","month","day","DailyForecasts","forEach","icon","Day","Icon","push","Date","toLocaleDateString","min","Temperature","Minimum","Value","max","Maximum","src","nextWeekWeather","map","forcast","index","nextWeekCard","tempContainer"],"mappings":"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","sourcesContent":["import Card from \"../../UI/Card/card\";\r\nimport TempDisplay from \"./tempDisplay/tempDispaly\";\r\nimport Classes from \"./nextWeekWeather.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst NextWeekWeather = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const location = useSelector((state) => {\r\n    return state.location;\r\n  });\r\n  console.log(location);\r\n  useEffect(() => {\r\n    fetch(\r\n      `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.key}?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&metric=true`\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        let future = [];\r\n        let options = {\r\n          weekday: \"long\",\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n        };\r\n        res.DailyForecasts.forEach((day) => {\r\n          let icon = day.Day.Icon;\r\n          if (icon < 10) {\r\n            icon = \"0\" + icon;\r\n          }\r\n          future.push({\r\n            day: new Date(day.Date).toLocaleDateString(\"en-US\", options),\r\n            min: day.Temperature.Minimum.Value,\r\n            max: day.Temperature.Maximum.Value,\r\n            src: icon,\r\n          });\r\n        });\r\n        setData(future);\r\n      });\r\n  }, [location]);\r\n  console.log(data);\r\n  return (\r\n    <div className={Classes.nextWeekWeather}>\r\n      {data.map((forcast, index) => {\r\n        console.log(data);\r\n        console.log(index);\r\n        return (\r\n          <Card key={index} className={Classes.nextWeekCard}>\r\n            <h2>{forcast.day}</h2>\r\n            <h3>temperature:</h3>\r\n            <div className={Classes.tempContainer}>\r\n              <TempDisplay headline=\"minimum\" temperature={forcast.min} />\r\n              <img\r\n                src={`https://developer.accuweather.com/sites/default/files/${forcast.src}-s.png`}\r\n                loading=\"lazy\"\r\n              ></img>\r\n              <TempDisplay headline=\"maximum\" temperature={forcast.max} />\r\n            </div>\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NextWeekWeather;\r\n"]},"metadata":{},"sourceType":"module"}