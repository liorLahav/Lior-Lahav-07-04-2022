{"ast":null,"code":"import React,{Suspense,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{Route,Routes}from\"react-router\";import\"./App.css\";import Header from\"./components/Header/Header\";import Alert from\"./components/UI/alert/alert\";import Loading from\"./components/UI/loading/loading\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Main=/*#__PURE__*/React.lazy(function(){return import(\"./components/mainPage/main\");});var Favorites=/*#__PURE__*/React.lazy(function(){return import(\"./components/favorites/favorites\");});function App(){var dispach=useDispatch();var AlertText=useSelector(function(state){return state.alert;});useEffect(function(){navigator.geolocation.getCurrentPosition(function(pos){fetch(\"http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=vHiCdzBf9ay1yTDR04546BFGIZDDIq4s&q=\".concat(pos.coords.latitude,\"%2C\").concat(pos.coords.longitude)).then(function(res){return res.json();}).then(function(res){dispach({type:\"changeLocation\",payload:{location:res.AdministrativeArea.LocalizedName,key:res.Key}});}).catch(function(err){dispach({type:\"alert\",payload:{text:\"oops couldn't find your location\"}});});});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Loading,{}),children:/*#__PURE__*/_jsx(Main,{})})}),/*#__PURE__*/_jsx(Route,{path:\"favorites\",element:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Loading,{}),children:/*#__PURE__*/_jsx(Favorites,{})})})]}),AlertText!==\"\"&&/*#__PURE__*/_jsx(Alert,{})]});}export default App;","map":{"version":3,"sources":["C:/Users/אביחי/Desktop/abra/src/App.js"],"names":["React","Suspense","useEffect","useDispatch","useSelector","Route","Routes","Header","Alert","Loading","Main","lazy","Favorites","App","dispach","AlertText","state","alert","navigator","geolocation","getCurrentPosition","pos","fetch","coords","latitude","longitude","then","res","json","type","payload","location","AdministrativeArea","LocalizedName","key","Key","catch","err","text"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,cAA9B,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,6BAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iCAApB,C,wFACA,GAAMC,CAAAA,IAAI,cAAGV,KAAK,CAACW,IAAN,CAAW,iBAAM,QAAO,4BAAP,CAAN,EAAX,CAAb,CACA,GAAMC,CAAAA,SAAS,cAAGZ,KAAK,CAACW,IAAN,CAAW,iBAAM,QAAO,kCAAP,CAAN,EAAX,CAAlB,CAEA,QAASE,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,OAAO,CAAGX,WAAW,EAA3B,CACA,GAAMY,CAAAA,SAAS,CAAGX,WAAW,CAAC,SAACY,KAAD,CAAW,CACvC,MAAOA,CAAAA,KAAK,CAACC,KAAb,CACD,CAF4B,CAA7B,CAGAf,SAAS,CAAC,UAAM,CACdgB,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,SAACC,GAAD,CAAS,CAChDC,KAAK,+HACoHD,GAAG,CAACE,MAAJ,CAAWC,QAD/H,eAC6IH,GAAG,CAACE,MAAJ,CAAWE,SADxJ,EAAL,CAGGC,IAHH,CAGQ,SAACC,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACD,CALH,EAMGF,IANH,CAMQ,SAACC,GAAD,CAAS,CACbb,OAAO,CAAC,CACNe,IAAI,CAAE,gBADA,CAENC,OAAO,CAAE,CACPC,QAAQ,CAAEJ,GAAG,CAACK,kBAAJ,CAAuBC,aAD1B,CAEPC,GAAG,CAAEP,GAAG,CAACQ,GAFF,CAFH,CAAD,CAAP,CAOD,CAdH,EAeGC,KAfH,CAeS,SAACC,GAAD,CAAS,CACdvB,OAAO,CAAC,CACNe,IAAI,CAAE,OADA,CAENC,OAAO,CAAE,CAAEQ,IAAI,CAAE,kCAAR,CAFH,CAAD,CAAP,CAID,CApBH,EAqBD,CAtBD,EAuBD,CAxBQ,CAwBN,EAxBM,CAAT,CAyBA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,MAAD,IADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EACE,IAAI,CAAC,GADP,CAEE,OAAO,cACL,KAAC,QAAD,EAAU,QAAQ,cAAE,KAAC,OAAD,IAApB,uBACE,KAAC,IAAD,IADF,EAHJ,EADF,cASE,KAAC,KAAD,EACE,IAAI,CAAC,WADP,CAEE,OAAO,cACL,KAAC,QAAD,EAAU,QAAQ,cAAE,KAAC,OAAD,IAApB,uBACE,KAAC,SAAD,IADF,EAHJ,EATF,GAFF,CAoBGvB,SAAS,GAAK,EAAd,eAAoB,KAAC,KAAD,IApBvB,GADF,CAwBD,CAED,cAAeF,CAAAA,GAAf","sourcesContent":["import React, { Suspense, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Routes } from \"react-router\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\n\nimport Alert from \"./components/UI/alert/alert\";\nimport Loading from \"./components/UI/loading/loading\";\nconst Main = React.lazy(() => import(\"./components/mainPage/main\"));\nconst Favorites = React.lazy(() => import(\"./components/favorites/favorites\"));\n\nfunction App() {\n  const dispach = useDispatch();\n  const AlertText = useSelector((state) => {\n    return state.alert;\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      fetch(\n        `http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=vHiCdzBf9ay1yTDR04546BFGIZDDIq4s&q=${pos.coords.latitude}%2C${pos.coords.longitude}`\n      )\n        .then((res) => {\n          return res.json();\n        })\n        .then((res) => {\n          dispach({\n            type: \"changeLocation\",\n            payload: {\n              location: res.AdministrativeArea.LocalizedName,\n              key: res.Key,\n            },\n          });\n        })\n        .catch((err) => {\n          dispach({\n            type: \"alert\",\n            payload: { text: \"oops couldn't find your location\" },\n          });\n        });\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <Header />\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Suspense fallback={<Loading />}>\n              <Main />\n            </Suspense>\n          }\n        />\n        <Route\n          path=\"favorites\"\n          element={\n            <Suspense fallback={<Loading />}>\n              <Favorites />\n            </Suspense>\n          }\n        ></Route>\n      </Routes>\n      {AlertText !== \"\" && <Alert />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}