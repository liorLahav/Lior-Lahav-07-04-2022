{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D1\\u05D9\\u05D7\\u05D9\\\\Desktop\\\\abra\\\\src\\\\components\\\\mainPage\\\\nextWeekWeather\\\\nextWeekWeather.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../../UI/Card/card\";\nimport TempDisplay from \"./tempDisplay/tempDispaly\";\nimport Classes from \"./nextWeekWeather.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NextWeekWeather = props => {\n  _s();\n\n  const dispach = useDispatch();\n  const [data, setData] = useState([]);\n  const location = useSelector(state => {\n    return state.location;\n  });\n  console.log(location); // useEffect(() => {\n  //   fetch(\n  //     `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.key}?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&metric=true`\n  //   )\n  //     .then((res) => {\n  //       return res.json();\n  //     })\n  //     .then((res) => {\n  //       console.log(res);\n  //       let future = [];\n  //       let options = {\n  //         weekday: \"long\",\n  //         year: \"numeric\",\n  //         month: \"long\",\n  //         day: \"numeric\",\n  //       };\n  //       res.DailyForecasts.forEach((day) => {\n  //         let icon = day.Day.Icon;\n  //         if (icon < 10) {\n  //           icon = \"0\" + icon;\n  //         }\n  //         future.push({\n  //           day: new Date(day.Date).toLocaleDateString(\"en-US\", options),\n  //           min: day.Temperature.Minimum.Value,\n  //           max: day.Temperature.Maximum.Value,\n  //           src: icon,\n  //         });\n  //       });\n  //       setData(future);\n\n  dispach({\n    type: \"AddFutureWheather\",\n    payload: {\n      key: location.key,\n      data: future\n    }\n  }); //     });\n  // }, [location]);\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Classes.nextWeekWeather,\n    children: data.map((forcast, index) => {\n      console.log(data);\n      console.log(index);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        class: Classes.nextWeekCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: forcast.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"temperature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Classes.tempContainer,\n          children: [/*#__PURE__*/_jsxDEV(TempDisplay, {\n            headline: \"minimum\",\n            temperature: forcast.min\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://developer.accuweather.com/sites/default/files/${forcast.src}-s.png`,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TempDisplay, {\n            headline: \"maximum\",\n            temperature: forcast.max\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NextWeekWeather, \"p69tfszcdROSyepl9Y5u1lw0zWc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NextWeekWeather;\nexport default NextWeekWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"NextWeekWeather\");","map":{"version":3,"sources":["C:/Users/אביחי/Desktop/abra/src/components/mainPage/nextWeekWeather/nextWeekWeather.js"],"names":["Card","TempDisplay","Classes","useDispatch","useSelector","useEffect","useState","NextWeekWeather","props","dispach","data","setData","location","state","console","log","type","payload","key","future","nextWeekWeather","map","forcast","index","nextWeekCard","day","tempContainer","min","src","max"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAMC,OAAO,GAAGN,WAAW,EAA3B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMM,QAAQ,GAAGR,WAAW,CAAES,KAAD,IAAW;AACtC,WAAOA,KAAK,CAACD,QAAb;AACD,GAF2B,CAA5B;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EANiC,CAOjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,EAAAA,OAAO,CAAC;AACNO,IAAAA,IAAI,EAAE,mBADA;AAENC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,GAAG,EAAEN,QAAQ,CAACM,GAAhB;AAAqBR,MAAAA,IAAI,EAAES;AAA3B;AAFH,GAAD,CAAP,CApCiC,CAwCjC;AACA;;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACkB,eAAxB;AAAA,cACGV,IAAI,CAACW,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC5BT,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACA,0BACE,QAAC,IAAD;AAAkB,QAAA,KAAK,EAAErB,OAAO,CAACsB,YAAjC;AAAA,gCACE;AAAA,oBAAKF,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAEvB,OAAO,CAACwB,aAAxB;AAAA,kCACE,QAAC,WAAD;AAAa,YAAA,QAAQ,EAAC,SAAtB;AAAgC,YAAA,WAAW,EAAEJ,OAAO,CAACK;AAArD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,GAAG,EAAG,yDAAwDL,OAAO,CAACM,GAAI,QAD5E;AAEE,YAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME,QAAC,WAAD;AAAa,YAAA,QAAQ,EAAC,SAAtB;AAAgC,YAAA,WAAW,EAAEN,OAAO,CAACO;AAArD;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAWN,KAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAjBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAjED;;GAAMhB,e;UACYJ,W,EAECC,W;;;KAHbG,e;AAmEN,eAAeA,eAAf","sourcesContent":["import Card from \"../../UI/Card/card\";\r\nimport TempDisplay from \"./tempDisplay/tempDispaly\";\r\nimport Classes from \"./nextWeekWeather.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst NextWeekWeather = (props) => {\r\n  const dispach = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const location = useSelector((state) => {\r\n    return state.location;\r\n  });\r\n  console.log(location);\r\n  // useEffect(() => {\r\n  //   fetch(\r\n  //     `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.key}?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA&metric=true`\r\n  //   )\r\n  //     .then((res) => {\r\n  //       return res.json();\r\n  //     })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       let future = [];\r\n  //       let options = {\r\n  //         weekday: \"long\",\r\n  //         year: \"numeric\",\r\n  //         month: \"long\",\r\n  //         day: \"numeric\",\r\n  //       };\r\n  //       res.DailyForecasts.forEach((day) => {\r\n  //         let icon = day.Day.Icon;\r\n  //         if (icon < 10) {\r\n  //           icon = \"0\" + icon;\r\n  //         }\r\n  //         future.push({\r\n  //           day: new Date(day.Date).toLocaleDateString(\"en-US\", options),\r\n  //           min: day.Temperature.Minimum.Value,\r\n  //           max: day.Temperature.Maximum.Value,\r\n  //           src: icon,\r\n  //         });\r\n  //       });\r\n  //       setData(future);\r\n  dispach({\r\n    type: \"AddFutureWheather\",\r\n    payload: { key: location.key, data: future },\r\n  });\r\n  //     });\r\n  // }, [location]);\r\n  console.log(data);\r\n  return (\r\n    <div className={Classes.nextWeekWeather}>\r\n      {data.map((forcast, index) => {\r\n        console.log(data);\r\n        console.log(index);\r\n        return (\r\n          <Card key={index} class={Classes.nextWeekCard}>\r\n            <h2>{forcast.day}</h2>\r\n            <h3>temperature:</h3>\r\n            <div className={Classes.tempContainer}>\r\n              <TempDisplay headline=\"minimum\" temperature={forcast.min} />\r\n              <img\r\n                src={`https://developer.accuweather.com/sites/default/files/${forcast.src}-s.png`}\r\n                loading=\"lazy\"\r\n              ></img>\r\n              <TempDisplay headline=\"maximum\" temperature={forcast.max} />\r\n            </div>\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NextWeekWeather;\r\n"]},"metadata":{},"sourceType":"module"}