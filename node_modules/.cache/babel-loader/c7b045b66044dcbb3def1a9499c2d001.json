{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D1\\u05D9\\u05D7\\u05D9\\\\Desktop\\\\abra\\\\src\\\\components\\\\mainPage\\\\main.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card/card\";\nimport Currentweather from \"./currentweather/currentweather\";\nimport NextWeekWeather from \"./nextWeekWeather/nextWeekWeather\";\nimport SearchBar from \"./searchBar/SearchBar\";\nimport Classes from \"./main.module.css\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = props => {\n  _s();\n\n  const dispach = useDispatch();\n  const location = useSelector(state => {\n    return state.location;\n  });\n  useEffect(() => {\n    let requiredDetails = {};\n    fetch(`http://dataservice.accuweather.com/currentconditions/v1/${loaction.key}?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA`).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n      let icon = res[0].WeatherIcon;\n\n      if (icon < 10) {\n        icon = \"0\" + icon;\n      }\n\n      let requiredDetails = {\n        temperature: res[0].Temperature.Metric.Value,\n        WeatherText: res[0].WeatherText,\n        icon: icon\n      };\n      console.log(requiredDetails);\n      requiredDetails.current = current;\n    });\n    let current = {\n      temperature: 20,\n      WeatherText: \"sunny\",\n      city: location.city,\n      key: location.key\n    }; // dont delete\n\n    requiredDetails.current = current;\n    fetch(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.key}?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA`).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n      let future = [];\n      let options = {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      res.forEach(day => {\n        let icon = day.Day.Icon;\n\n        if (icon < 10) {\n          icon = \"0\" + icon;\n        }\n\n        future.push({\n          day: day.Date.toLocaleDateString(\"en-US\", options),\n          min: day.Temperature.Minimum.Value,\n          max: day.Temperature.Maximum.Value,\n          src: icon\n        });\n        requiredDetails.future = future;\n      });\n    });\n    dispach({\n      type: \"AddCurrentWheather\",\n      payload: {\n        key: location.key,\n        current: requiredDetails\n      }\n    });\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: Classes.mainPage,\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      class: Classes.mainCard,\n      children: [/*#__PURE__*/_jsxDEV(NextWeekWeather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Currentweather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"GgJVrRC3v2UN8pTnAcVgEKcvpVk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/אביחי/Desktop/abra/src/components/mainPage/main.js"],"names":["Card","Currentweather","NextWeekWeather","SearchBar","Classes","useEffect","useDispatch","useSelector","Main","props","dispach","location","state","requiredDetails","fetch","loaction","key","then","res","json","console","log","icon","WeatherIcon","temperature","Temperature","Metric","Value","WeatherText","current","city","future","options","weekday","year","month","day","forEach","Day","Icon","push","Date","toLocaleDateString","min","Minimum","max","Maximum","src","type","payload","mainPage","mainCard"],"mappings":"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","sourcesContent":["import Card from \"../UI/Card/card\";\r\nimport Currentweather from \"./currentweather/currentweather\";\r\nimport NextWeekWeather from \"./nextWeekWeather/nextWeekWeather\";\r\nimport SearchBar from \"./searchBar/SearchBar\";\r\nimport Classes from \"./main.module.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Main = (props) => {\r\n  const dispach = useDispatch();\r\n  const location = useSelector((state) => {\r\n    return state.location;\r\n  });\r\n  useEffect(() => {\r\n    let requiredDetails = {};\r\n    fetch(\r\n      `http://dataservice.accuweather.com/currentconditions/v1/${loaction.key}?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA`\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        let icon = res[0].WeatherIcon;\r\n        if (icon < 10) {\r\n          icon = \"0\" + icon;\r\n        }\r\n        let requiredDetails = {\r\n          temperature: res[0].Temperature.Metric.Value,\r\n          WeatherText: res[0].WeatherText,\r\n          icon: icon,\r\n        };\r\n        console.log(requiredDetails);\r\n\r\n        requiredDetails.current = current;\r\n      });\r\n    let current = {\r\n      temperature: 20,\r\n      WeatherText: \"sunny\",\r\n      city: location.city,\r\n      key: location.key,\r\n    };\r\n    // dont delete\r\n    requiredDetails.current = current;\r\n\r\n    fetch(\r\n      `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.key}?apikey=vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA`\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        let future = [];\r\n        let options = {\r\n          weekday: \"long\",\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n        };\r\n        res.forEach((day) => {\r\n          let icon = day.Day.Icon;\r\n          if (icon < 10) {\r\n            icon = \"0\" + icon;\r\n          }\r\n          future.push({\r\n            day: day.Date.toLocaleDateString(\"en-US\", options),\r\n            min: day.Temperature.Minimum.Value,\r\n            max: day.Temperature.Maximum.Value,\r\n            src: icon,\r\n          });\r\n          requiredDetails.future = future;\r\n        });\r\n      });\r\n    dispach({\r\n      type: \"AddCurrentWheather\",\r\n      payload: { key: location.key, current: requiredDetails },\r\n    });\r\n  }, [location]);\r\n\r\n  return (\r\n    <main className={Classes.mainPage}>\r\n      <SearchBar />\r\n      <Card class={Classes.mainCard}>\r\n        <NextWeekWeather />\r\n        <Currentweather />\r\n      </Card>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}